# importy i pliki
import matplotlib.pyplot as plt

file1 = open("data1", "r")
file2 = open("data2", "r")

# stałe układu pomiarowego
R = 0.1
I = 2
u = 12.56637 * 10 ** (-7)
z = 1
W = 400
B1 = 5
B2 = 5
Z1 = 0.35
Z2 = 0.45
P1 = 1000
P2 = 1000

# rozkład danych z akcelerometru na składowe: x y z
t1 = []
x1 = []
y1 = []
z1 = []

for line in file1:
    list1 = line.split(',')
    t1.append(float(list1[0]))
    x1.append(float(list1[1]))
    y1.append(float(list1[2]))
    z1.append(float(list1[3]))

# print(t1)
# print(x1)
# print(y1)
# print(z1)

# obliczanie delta T
T1 = float(t1[len(t1) - 1] / len(t1))
print("delta T1 = " + str(T1) + " [s]")

# obliczanie przemieszczenia
a = []

for i in range(len(t1)):
    q = (x1[i])
    a.append(q)

# for i in range(W):
#     q = (x1[i])
#     a.append(q)

# print(a)

v = []
f = 0

for i in range(len(a)):
    q = (a[i] * T1)
    f = f + q
    v.append(f)

# print(v)

s = []
f = 0

t2 = []
x2 = []
y2 = []
z2 = []

for line in file2:
    list2 = line.split(',')
    t2.append(float(list2[0]))
    x2.append(float(list2[1]))
    y2.append(float(list2[2]))
    z2.append(float(list2[3]))

if len(t1) > len(t2):
    u = len(t2)
else:
    u = len(t1)

s1 = []

for i in range(u):
    q = (v[i] * T1)
    f = f + q
    s.append(f)
    s1.append(-f)

# print(s)

# rozkład danych z magnetometru na składowe: x y z


# print(t2)
# print(x2)
# print(y2)
# print(z2)

# obliczanie delta T
T2 = float(t2[len(t2) - 1] / len(t2))
print('delta T2 = ' + str(T2) + ' [s]')

# obliczanie wypadkowego wektora pola magnetycznego
m = []

for i in range(u):
    q = (x2[i] ** 2 + y2[i] ** 2 + z2[i] ** 2) ** 0.5
    m.append(q)

# for i in range(W):
#     q = (x2[i] ** 2 + y2[i] ** 2 + z2[i] ** 2) ** 0.5
#     m.append(q)

# print(m)

# obliczanie teoretycznego rozkładu pola magnetycznego
t = []
L = []
r = 0

if len(t1) > len(t2):
    T = len(t2)
else:
    T = len(t1)

q = 0

for i in range(T):
    r = r + 1 / T
    t.append(r)
    # q = (u / 2) * (I * R ** 2) / (R ** 2 + (z - s[i]) ** 2) ** (3 / 2)
    q = (B1 / (1/P1 + (Z1 + s[i]) ** 2) + B2 / (1/P2 + (Z1 + Z2 + s[i]) ** 2))*1
    L.append(q)

# for i in range(W):
#     r = r + 1/T
#     t.append(r)
#     # q = -(u / 2) * (I * R ** 2) / (R ** 2 + (z - s[i]) ** 2) ** (3 / 2)
#     q = (B1 / (1/O1 + (-Z1 - s[i]) ** 2) + B2 / (1/O2 + (-s[i] - Z1 - Z2) ** 2))*1.5
#     L.append(q)


Tt = [i for i in range(W)]

plt.plot(s1, L)
# plt.plot(Tt, L)
# plt.title('L in first ' + str(W) + 'dt')

# plt.plot(t1, m)
# plt.plot(s1, m)
# plt.plot(Tt, m)
# plt.title('M in first ' + str(W) + 'dt')

# plt.plot(t1, a)
# plt.plot(t1, v)
# plt.plot(t1, s)

# plt.plot(Tt, a)
# plt.plot(Tt, v)
# plt.plot(Tt, s)
# plt.title('s in first ' + str(W) + 'dt')
plt.show()
